---

- name: Include variable
  include_vars:
    file: vars.yml

- name: Install a list of MariaDB packages 
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - mariadb-server
    - mariadb
    - python2-PyMySQL
    - python36-PyMySQL
    - MySQL-python
    - libsemanage-python
  when: ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version'] == "7" 
  tags: mariadb

- name: Install a list of MariaDB packages 
  dnf:
    name: "{{ packages }}"
  vars:
    packages:
    - mariadb-server
    - mariadb
    - python3-PyMySQL
    - python3-libsemanage
  when: (ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version'] == "8") or (ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version'] == "9") 
  tags: mariadb


- name: Make sure MariaDb service is running and enabled
  systemd:
    state: started
    name: mariadb
    enabled: yes
  tags: mariadb


- name: adding firewalld rules for MariaDB
  firewalld:
    service: mysql
    permanent: true
    immediate: true
    state: enabled
  tags: mariadb


- name: Set mysql_connect_any flag on and keep it persistent across reboots
  seboolean:
    name: mysql_connect_any
    state: yes
    persistent: yes
  tags: mariadb


- name: Add my.cnf
  template: src=my.cnf.j2 dest=/etc/my.cnf owner=root group=root mode=0600
  tags: mariadb

- name: Restart MariaDb
  systemd: 
    state: restarted
    name: mariadb
  tags: mariadb


- name: Set root Password
  mysql_user: login_password={{ mysql_root_password }} check_implicit_admin=yes name=root host={{ item }} password={{ mysql_root_password }} state=present 
  with_items:
    - localhost
    - 127.0.0.1
    - ::1
  tags: mariadb

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False
  tags: mariadb

- name: Remove anonymous users
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User=''
  changed_when: False
  tags: mariadb

- name: Disallow root login remotely
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: False
  tags: mariadb

- name: Remove test database and access to it
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DROP DATABASE IF EXISTS test
    - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
  changed_when: False
  tags: mariadb

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False
  tags: mariadb


